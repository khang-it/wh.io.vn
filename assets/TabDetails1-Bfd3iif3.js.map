{"version":3,"mappings":";wKAEaA,EAAGC,EAAAC,EAAA,SACHC,EAAEF,EAAAC,EAAA,QAEFE,EAAIH,EAAAC,EAAA,kBACJG,EAAWJ,EAAAC,EAAA,uBAEhBI,EAAY,CAChB,sBAAmB,0BAAqB,4CACxC,wBAAqB,0BAAqB,4CAC1C,yBAAsB,6BAAwB,4CAC9C,wBAAqB,4BAAuB,mDAK1C,IAAAC,MAAuB,IACvBC,IAAmB,IAAI,EACvBC,IAAY,EAAK,EACjBC,IAAQ,IAAI,iBASDC,EAAcC,EAAM,CACjCC,EAAAJ,EAAY,EAAI,EAChBI,EAAAH,EAAQ,IAAI,EACZG,EAAAL,EAAmB,IAAI,EAEnB,UACIM,EAASR,EAAaM,CAAI,YAGrBE,GAAW,WACV,8CAAoCF,CAAI,eAGhD,GAAAL,EAAiB,IAAIK,CAAI,EAC3BC,EAAAL,EAAmBD,EAAiB,IAAIK,CAAI,OACvC,CACC,MAAAG,QAAeD,EAAM,IAC3BN,EAAmBO,EAAO,OAAO,EACjCR,EAAiB,IAAIK,IAAMJ,CAAgB,EAC7C,CACD,OAAQQ,EAAG,CAEVH,EAAAH,EAAQM,CAAC,CACX,QAAU,CACRH,EAAAJ,EAAY,EAAK,QACXQ,EAAI,CACZ,CACF,mBA/BOZ,EAAW,GAChBM,EAAcN,EAAW","names":["tab","$.prop","$$props","id","tabs","activeTabId","componentMap","loadedComponents","currentComponent","isLoading","error","loadComponent","type","$.set","loader","module","e","tick"],"ignoreList":[],"sources":["../../src/components/tabs/details/TabDetails1.svelte"],"sourcesContent":["<script>\n  import { tick } from 'svelte';\n  export let tab;\n  export let id;\n\n  export let tabs = [];\n  export let activeTabId;\n\n  const componentMap = {\n    user: () => import('./UserDetail.svelte'),\n    report: () => import('./ReportView.svelte'),\n    product: () => import('./ProductDetail.svelte'),\n    result: () => import('./ResultDetail.svelte')\n  };\n\n  // $: console.log('tab detail2', id);\n\n  let loadedComponents = new Map();\n  let currentComponent = null;\n  let isLoading = false;\n  let error = null;\n\n  // $: if (tab?.type) {\n  //   loadComponent(tab.type);\n  // }\n  $: if (activeTabId) {\n    loadComponent(activeTabId);\n  }\n\n  async function loadComponent(type) {\n    isLoading = true;\n    error = null;\n    currentComponent = null;\n\n    try {\n      const loader = componentMap[type];\n      //console.log('Kieu:', typeof loader, type);\n\n      if (typeof loader !== 'function') {\n        throw new Error(`Component loader for type \"${type}\" not found`);\n      }\n\n      if (loadedComponents.has(type)) {\n        currentComponent = loadedComponents.get(type);\n      } else {\n        const module = await loader();\n        currentComponent = module.default;\n        loadedComponents.set(type, currentComponent);\n      }\n    } catch (e) {\n      //console.error(e);\n      error = e;\n    } finally {\n      isLoading = false;\n      await tick();\n    }\n  }\n</script>\n\n<!-- {#if activeTabId}\n  {#each tabs as tab (tab.id)}\n    {#if tab.id === activeTabId}\n      {#if tab.type === 'results'}\n        <Results {tab} />\n      {/if}\n    {/if}\n  {/each}\n{:else}\n  <div class=\"p-4 text-gray-500\">Chưa có tab nào mở</div>\n{/if} -->\n\n<slot {currentComponent} {tabs} {activeTabId} {tab} {isLoading} {error} {id} />\n"],"file":"assets/TabDetails1-Bfd3iif3.js"}